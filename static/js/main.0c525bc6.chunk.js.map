{"version":3,"sources":["services/api.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/Loader/Loader.jsx","components/App/App.jsx","index.js"],"names":["axios","defaults","baseURL","params","key","image_type","fetchImages","imageTags","page","a","get","response","data","hits","Searchbar","onSearch","className","onSubmit","e","preventDefault","target","elements","value","reset","type","name","autoComplete","autoFocus","placeholder","ImageGalleryItem","webformatURL","largeImageURL","tags","handleSelectedImage","src","alt","onClick","ImageGallery","gallery","map","id","Button","handleLoadMore","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleKeydown","removeEventListener","code","createPortal","currentTarget","Spinner","color","height","width","timeout","App","useState","setImageTags","setPage","setGallery","requestStatus","setRequestStatus","showModal","setShowModal","setLargeImageURL","setTags","toggleModal","handleScroll","scrollTo","top","documentElement","scrollHeight","behavior","prevState","length","toast","console","log","getGallery","isLoading","showGallery","position","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0c525bc6.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '22578935-bf31ef834e5011bcd0b44501d';\nconst BASE_URL = 'https://pixabay.com/api/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  key: API_KEY,\n  image_type: 'photo',\n};\n\nexport const fetchImages = async (imageTags, page) => {\n  const response = await axios.get(\n    `?q=${imageTags}&orientation=horizontal&safesearch=true&page=${page}&per_page=12`,\n  );\n  return response.data.hits;\n};\n","import PropTypes from 'prop-types';\nimport './Searchbar.css';\n\nexport const Searchbar = ({ onSearch }) => {\n  const handleSearch = e => {\n    e.preventDefault();\n    onSearch(e.target.elements.imageTags.value);\n    e.target.reset();\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSearch}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          name=\"imageTags\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport './ImageGalleryItem.css';\n\nexport const ImageGalleryItem = ({\n  webformatURL,\n  largeImageURL,\n  imageTags,\n  tags,\n  handleSelectedImage,\n}) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={webformatURL}\n        alt={tags}\n        className=\"ImageGalleryItem-image\"\n        onClick={() => handleSelectedImage(largeImageURL, imageTags)}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  imageTags: PropTypes.string,\n  tags: PropTypes.string,\n  handleSelectedImage: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { ImageGalleryItem } from 'components/ImageGalleryItem/ImageGalleryItem';\nimport './ImageGallery.css';\n\nexport const ImageGallery = ({ gallery, handleSelectedImage }) => {\n  return (\n    <ul className=\"ImageGallery\">\n      {gallery.map(({ id, largeImageURL, webformatURL }) => (\n        <ImageGalleryItem\n          key={id}\n          largeImageURL={largeImageURL}\n          webformatURL={webformatURL}\n          handleSelectedImage={handleSelectedImage}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  gallery: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleSelectedImage: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport './Button.css';\n\nexport const Button = ({ handleLoadMore }) => {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={handleLoadMore}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  handleLoadMore: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport './Modal.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = (onClose, largeImageURL, tags, children) => {\n  // закрытие модалки по Esc\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeydown);\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  });\n\n  const handleKeydown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  // Закрытие по клику на бэкдроп\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        {children}\n        {/* {this.props.children} */}\n        <img src={largeImageURL} alt={tags} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n};\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport const Spinner = () => {\n  return <Loader type=\"Rings\" color=\"#00BFFF\" height={80} width={80} timeout={3000} />;\n};\n","import { useState, useEffect } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { fetchImages } from '../../services/api';\nimport { Searchbar } from '../Searchbar/Searchbar';\nimport { ImageGallery } from '../ImageGallery/ImageGallery';\nimport { Button } from '../Button/Button';\nimport { Modal } from '../Modal/Modal';\nimport { Spinner } from '../Loader/Loader';\nimport './App.css';\n\nexport const App = () => {\n  const [imageTags, setImageTags] = useState('');\n  const [page, setPage] = useState(1);\n  const [gallery, setGallery] = useState([]);\n  const [requestStatus, setRequestStatus] = useState('idle');\n  const [showModal, setShowModal] = useState(false);\n  const [largeImageURL, setLargeImageURL] = useState('');\n  const [tags, setTags] = useState('');\n\n  //Делаем запись в state\n\n  const handleFormSubmit = imageTags => {\n    setPage(1);\n    setGallery([]);\n    setImageTags(imageTags);\n  };\n\n  const handleLoadMore = () => {\n    setPage(prevState => prevState.page + 1);\n  };\n\n  // Управление модалкой\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const handleSelectedImage = (largeImageURL, tags) => {\n    setLargeImageURL(largeImageURL);\n    setTags(tags);\n    toggleModal();\n  };\n\n  const handleScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  // Реакция на изменение state, делаем запросы\n\n  useEffect(() => {\n    async function getGallery() {\n      try {\n        setRequestStatus('pending');\n        const gallery = await fetchImages(imageTags, page);\n        //       setGallery((prevState) => {\n        //   console.log(prevState);\n        //   return prevState;\n        // });\n        setGallery(prevState => [...prevState, ...gallery]);\n        setRequestStatus('resolved');\n        handleScroll();\n        if (gallery.length === 0) {\n          return toast('Sorry, there are no images matching your search query. Please try again.');\n        }\n      } catch (error) {\n        setRequestStatus('rejected');\n        console.log(error);\n      }\n    }\n    getGallery();\n  }, [imageTags, page]);\n\n  // async componentDidUpdate(_, prevState) {\n  //   const { imageTags, page } = this.state;\n\n  //   if (prevState.imageTags !== imageTags || prevState.page !== page)\n  //     try {\n  //       this.setState({ requestStatus: 'pending' });\n  //       const gallery = await fetchImages(imageTags, page);\n\n  //       this.setState(\n  //         prevState => ({\n  //           gallery: [...prevState.gallery, ...gallery],\n  //           requestStatus: 'resolved',\n  //         }),\n  //         () => {\n  //           this.handleScroll();\n  //         },\n  //       );\n  //       if (gallery.length === 0) {\n  //         return toast('Sorry, there are no images matching your search query. Please try again.');\n  //       }\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  // }\n\n  // const { gallery, showModal, largeImageURL, imageTags, requestStatus } = this.state;\n  const isLoading = requestStatus === 'pending';\n  const showGallery = gallery.length > 0 && !isLoading;\n\n  return (\n    <div>\n      {showModal && <Modal onClose={toggleModal} largeImageURL={largeImageURL} alt={imageTags} />}\n      <Searchbar onSearch={handleFormSubmit} />\n      {isLoading && <Spinner />}\n      <ImageGallery gallery={gallery} handleSelectedImage={handleSelectedImage} />\n      {showGallery && <Button handleLoadMore={handleLoadMore} />}\n      <Toaster position=\"top-right\" />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App/App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}